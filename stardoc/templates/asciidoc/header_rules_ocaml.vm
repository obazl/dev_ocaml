// GENERATED FILE - do not edit
= OCaml Rules
:page-permalink: /:path/ocaml-rules
:page-layout: page_rules_ocaml
:page-pkg: rules_ocaml
:page-doc: refman
:page-tags: [configation,defaults]
:page-keywords: notes, tips, cautions, warnings, admonitions
:page-last_updated: June 1, 2022
:page-toc: false

**WARNING** Beta version - subject to change

== Configurable defaults

These options and flags apply to all `ocaml_*` rules. They can be
overridden on the command line; for example, to enable verbosity
(`-verbose`) for all `ocaml_*` build targets, pass
`--@ocaml//verbose`. See
link:../user-guide/configurable-defaults[Configurable Defaults] for
more information.

In addition to the options and flags listed here, which apply to all
`ocaml_*` rule instances, each rule may have its own set of
configurable defaults.

=== Options

May be enums, strings, labels, etc.

[.rule_attrs]
[cols="1,1,1"]
|===
| Label | Default | x

| @rules_ocaml//build/mode | @ocaml//build/mode:native | Enum: :bytecode, :native

| @rules_ocaml//build/cc/mode | @ocaml//build/cc/mode:fastbuild | Enum: :dbg, :fastbuild, :opt

| @rules_ocaml//build/profile | @ocaml//build/profile:fastbuild | Enum: :dbg, :fastbuild, :opt
|===

NOTE: CC build mode is set by passing `--compilation_mode`
(equivalently `-c`) on the command line, e.g. `-c opt`. This sets the
value of `@rules_ocaml//build/cc/mode`.

=== Flags

Each boolean flag `foo` may be enabled by `--@ocaml//foo` or
`--@ocaml//foo:enable`, and disabled with `--no@ocaml//foo` or
`--@ocaml//foo:disable`. Each flag has a corresponding OCaml option
and an OBazl (not an OCaml) negation; see
xref:../user-guide/configurable-defaults#_disabling[Configurable_Defaults:
Disabling] for information on how to use negated options to override
defaults.

[.rule_attrs]
[cols="1,1,1"]
|===
| Label | Default | `opts` attrib

| @rules_ocaml//cfg/debug | disabled | `-g`, `-no-g`

| @rules_ocaml//cfg/cmt | disabled | `-bin-annot`, `-no-bin-annot`

| @rules_ocaml//cfg/keep-locs | enabled | `-keep-locs`, `-no-keep-locs`

| @rules_ocaml//cfg/noassert | enabled | `-noassert`, `-no-noassert`

| @rules_ocaml//cfg/opaque | disabled | `-opaque`, `-no-opaque`

| @rules_ocaml//cfg/short-paths | enabled | `-short-paths`, `-no-short-paths`

| @rules_ocaml//cfg/strict-formats | enabled | `-strict-formats`, `-no-strict-formats`

| @rules_ocaml//cfg/strict-sequence | enabled | `-strict-sequence`, `-no-strict-sequence`

| @rules_ocaml//cfg/verbose^1^ | disabled | `-verbose`, `-no-verbose`

|===

^1^ Each `ocaml_*` rule also has it's own `verbose` flag.
